@startuml
class Match{

+ Match(Competitor c1,Competitor c2)

}

class Competitor{
# int nbPts

+ Competitor(String name)
+ addPts():void
+ getPts():int
}

package meeting {

abstract class Competition{

# Match match
# final List<Competitor> competitors
+ Competition(List<Competitor>)
+ play():void
# play(List<Competitor>):void
# playMatch(Competitor c1,Competitor c2):void
+ ranking():Map<Competitor,Integer>

}

class League{

+ League()

}
class Tournement{

+ Tournement()

}

Competition <|-- Tournement
Competition <|-- League
}
@enduml